<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paralelismo on La Naturaleza del Software</title>
    <link>http://localhost:1313/tags/paralelismo/</link>
    <description>Recent content in Paralelismo on La Naturaleza del Software</description>
    <generator>Hugo</generator>
    <language>es-cl</language>
    <lastBuildDate>Mon, 28 Sep 2009 08:25:11 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/paralelismo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>El problema de paralelizar 3</title>
      <link>http://localhost:1313/posts/2009/el-problema-de-paralelizar-3/</link>
      <pubDate>Mon, 28 Sep 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/el-problema-de-paralelizar-3/</guid>
      <description>&lt;p&gt;Aunque mucha gente cita el acrónimo&#xA;&lt;a href=&#34;https://www.catb.org/~esr/jargon/html/F/FUD.html&#34;&gt;FUD&lt;/a&gt;, no muchos saben&#xA;que fue &lt;a href=&#34;http://localhost:1313/2009/09/el-problema-de-paralelizar.html&#34;&gt;Gene Amdahl&lt;/a&gt; el&#xA;que inventó este famoso acrónimo:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;FUD is the fear, uncertainty, and doubt that IBM sales people&#xA;instill in the minds of potential customers who might be considering&#xA;Amdahl products.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;FUD es el temor (fear), incerteza (uncertainty) y duda (doubt) que&#xA;la gente de ventas de IBM instalará en las mentes de los clientes&#xA;potenciales que consideren los productos Amdahl.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>El problema de paralelizar 2</title>
      <link>http://localhost:1313/posts/2009/el-problema-de-paralelizar-2/</link>
      <pubDate>Wed, 23 Sep 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/el-problema-de-paralelizar-2/</guid>
      <description>&lt;p&gt;Durante una hora un automovil ha recorrido la mitad de la distancia&#xA;entre dos ciudades, las que se encuentran separadas por 120 Kms. No&#xA;importa la velocidad que tome el auto para recorrer el resto del camino,&#xA;su velocidad media siempre será menor a 120 Km/hr (sólo si la velocidad&#xA;fuera infinita se podría alcanzar los 120 Km/hr).&lt;/p&gt;&#xA;&lt;p&gt;Ese ejemplo sirve para entender la Ley de Amdahl que &#xA;&lt;a href=&#34;http://localhost:1313/2009/09/el-problema-de-paralelizar.html&#34;&gt;presenté anteriormente&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Pero supongamos que un automovil ya ha estado viajando por un tiempo a&#xA;menos de 120 Km/hr. Dado suficiente tiempo y distancia para viajar, la&#xA;velocidad media del auto puede eventualmente alcanzar los 120 Km/hr, no&#xA;importa cuan lento ha viajado.&lt;/p&gt;</description>
    </item>
    <item>
      <title>El problema de paralelizar</title>
      <link>http://localhost:1313/posts/2009/el-problema-de-paralelizar/</link>
      <pubDate>Sun, 13 Sep 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/el-problema-de-paralelizar/</guid>
      <description>&lt;p&gt;¿Cómo aumentar el desempeño de nuestros sistemas?&lt;/p&gt;&#xA;&lt;p&gt;La respuesta a esta pregunta pasa por definir primero cómo medimos el&#xA;desempeño de nuestros sistemas. Ya hemos visto que una mala definición&#xA;de la medida de desempeño nos puede llevar a profundos errores de juicio&#xA;(&lt;a href=&#34;http://localhost:1313/2009/08/enganos-numericos.html&#34;&gt;¿recuerdan el problema con los kilómetros por litro de bencina?&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Algo parecido pasa con el aumento de desempeño de nuestros sistemas de&#xA;cómputo, debido a la disponibilidad de procesadores multicore. Desde&#xA;hace un tiempo se nos viene diciendo que el truco para mejorar el&#xA;desempeño de nuestros sistemas consiste en aumentar la cantidad de&#xA;procesadores, y adoptar el paralelismo en el diseño del software que&#xA;construimos.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
