<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programación on La Naturaleza del Software</title>
    <link>http://localhost:1313/tags/programaci%C3%B3n/</link>
    <description>Recent content in Programación on La Naturaleza del Software</description>
    <generator>Hugo</generator>
    <language>es-cl</language>
    <lastBuildDate>Wed, 06 Jan 2021 10:14:09 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/programaci%C3%B3n/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>La Amplitud De Tu Conocimiento, La Profundidad De Tu Ignorancia</title>
      <link>http://localhost:1313/posts/2021/2021-01-06-la-amplitud-de-tu-conocimiento-la-profundidad-de-tu-ignorancia/</link>
      <pubDate>Wed, 06 Jan 2021 10:14:09 -0300</pubDate>
      <guid>http://localhost:1313/posts/2021/2021-01-06-la-amplitud-de-tu-conocimiento-la-profundidad-de-tu-ignorancia/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;As we know, There are known knowns.&lt;br&gt;&#xA;There are things we know we know.&lt;br&gt;&#xA;We also know&lt;br&gt;&#xA;There are known unknowns.&lt;br&gt;&#xA;That is to say&lt;br&gt;&#xA;We know there are some things&lt;br&gt;&#xA;We do not know.&lt;br&gt;&#xA;But there are also unknown unknowns,&lt;br&gt;&#xA;The ones we don&#39;t know&lt;br&gt;&#xA;We don&#39;t know.&lt;/p&gt;&#xA;&lt;p&gt;Como sabemos, Hay conocimientos conocidos.&lt;br&gt;&#xA;Hay cosas que sabemos que sabemos.&lt;br&gt;&#xA;También sabemos&lt;br&gt;&#xA;Que hay conocimientos desconocidos.&lt;br&gt;&#xA;Es decir&lt;br&gt;&#xA;Sabemos que hay cosas&lt;br&gt;&#xA;Que no sabemos.&lt;br&gt;&#xA;Pero hay también desconocidos desconocimientos,&lt;br&gt;&#xA;Aquellos que no sabemos&lt;br&gt;&#xA;Que no los sabemos&lt;/p&gt;</description>
    </item>
    <item>
      <title>Julia: ¿Un mito hecho realidad?</title>
      <link>http://localhost:1313/posts/2018/julia-un-mito-hecho-realidad/</link>
      <pubDate>Sun, 01 Apr 2018 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2018/julia-un-mito-hecho-realidad/</guid>
      <description>&lt;p&gt;Julia es una de esas apariciones inesperadas en el panorama de los&#xA;lenguajes de programación que vale la pena explorar. Es por esto que&#xA;esta vez he recurrido a un &amp;ldquo;villano invitado&amp;rdquo; para que nos muestre de&#xA;qué se trata. Camilo Chacón&#xA;(&lt;a href=&#34;https://twitter.com/cchaconsartori&#34;&gt;@cchaconsartori&lt;/a&gt;) ha tenido la&#xA;gentileza de escribir este artículo en exclusiva para La Naturaleza del&#xA;Software sobre el lenguaje Julia, que lo disfruten.&lt;/p&gt;&#xA;&lt;h1 id=&#34;julia-un-mito-hecho-realidad&#34;&gt;Julia: ¿Un mito hecho realidad?&lt;/h1&gt;&#xA;&lt;p&gt;por Camilo Chacón&lt;/p&gt;</description>
    </item>
    <item>
      <title>Yo redondeo, tú redondeas</title>
      <link>http://localhost:1313/posts/2017/yo-redondeo-tu-redondeas/</link>
      <pubDate>Sun, 22 Oct 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/yo-redondeo-tu-redondeas/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;You say either and I say either,&lt;br&gt;&#xA;You say neither and I say neither&lt;br&gt;&#xA;Either, either Neither, neither&lt;br&gt;&#xA;Let&amp;rsquo;s call the whole thing off.&lt;br&gt;&#xA;You like potato and I like potahto&lt;br&gt;&#xA;You like tomato and I like tomahto&lt;br&gt;&#xA;Potato, potahto, Tomato, tomahto.&lt;br&gt;&#xA;Let&amp;rsquo;s call the whole thing off&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;el-problema&#34;&gt;El problema&lt;/h2&gt;&#xA;&lt;p&gt;En octubre de 2017 el Banco Central Chileno informa que las monedas de 1&#xA;y 5 pesos dejarán de circular. La razón de esto es que el costo de&#xA;producirlas excede el valor de las mismas.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Ante esta situación se sugiere que las transacciones en dinero efectivo&#xA;hagan un redondeo, de modo que cuando un monto a pagar termine en 5, 4,&#xA;3, 2 ó 1 quede la cifra final en 0. En el caso contrario, es decir,&#xA;cuando termine en 6, 7, 8 ó 9 la cifra quede en la decena siguiente.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Snow Goose</title>
      <link>http://localhost:1313/posts/2017/snow-goose/</link>
      <pubDate>Sun, 15 Oct 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/snow-goose/</guid>
      <description>&lt;h2 id=&#34;camel&#34;&gt;Camel&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.camelproductions.com/&#34;&gt;Camel&lt;/a&gt; es una gran banda de rock&#xA;progresivo inglesa, fundada en 1971 por &lt;a href=&#34;https://en.wikipedia.org/wiki/Andrew_Latimer&#34;&gt;Andrew&#xA;Latimer&lt;/a&gt;. Su formación&#xA;original, aparte de Latimer en guitarra, contaría con &lt;a href=&#34;https://en.wikipedia.org/wiki/Andy_Ward_(musician)&#34;&gt;Andy&#xA;Ward&lt;/a&gt;, como&#xA;baterista, Doug Ferguson en bajo y &lt;a href=&#34;https://en.wikipedia.org/wiki/Peter_Bardens&#34;&gt;Peter&#xA;Bardens&lt;/a&gt; en teclados. Fue&#xA;en 1974, con su segundo álbum,&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mirage_(Camel_album)&#34;&gt;Mirage&lt;/a&gt;, que fueron&#xA;reconocidos por la crítica, y un moderado éxito que los llevó incluso de&#xA;gira por el oeste de Estados Unidos de Norte América. Es un grupo que&#xA;incorpora elementos de Jazz, música clásica y barroca, junto con toques&#xA;electrónicos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Red Barchetta</title>
      <link>http://localhost:1313/posts/2017/red-barcheta/</link>
      <pubDate>Sun, 24 Sep 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/red-barcheta/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;My uncle has a country place&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;That no one knows about&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;He says it used to be a farm&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;Before the Motor Law&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Red Barchetta es la segunda canción del álbum de 1981 &amp;ldquo;Moving&#xA;Pictures&amp;rdquo; de la banda canadiense Rush. Narra una historia de ciencia&#xA;ficción, en un mundo futuro donde los automóviles al parecer están&#xA;prohibidos.&lt;/p&gt;&#xA;&lt;p&gt;La leyenda cuenta que Neil Peart simplemente adaptó un cuento del&#xA;escritor Richard S. Foster titulado &amp;ldquo;A Nice Morning Drive&amp;rdquo;, publicado&#xA;en la revista &lt;a href=&#34;http://www.roadandtrack.com/&#34;&gt;Road and Track&lt;/a&gt; en 1973.&#xA;Peart quizo contactar al autor, pero en Road and Track ya no tenían los&#xA;datos de contacto de Foster, así que agregó al final de la letra en el&#xA;álbum la frase: &amp;ldquo;Inspired by &amp;lsquo;A Nice Morning Drive&amp;rsquo; by Richard S.&#xA;Foster&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Occam&#39;s Razor</title>
      <link>http://localhost:1313/posts/2017/occams-razor/</link>
      <pubDate>Tue, 29 Aug 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/occams-razor/</guid>
      <description>&lt;h2 id=&#34;porcupine-tree-y-steven-wilson&#34;&gt;Porcupine Tree y Steven Wilson&lt;/h2&gt;&#xA;&lt;p&gt;La historia de Porcupine Tree es curiosa. Nació en 1987 como una suerte&#xA;de elaborada broma (hoax band) creada por Steven Wilson y Malcolm Stock.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://d2dspjyoh5c79p.cloudfront.net/c142f0bb-8c19-11e7-a030-2b5831f8ecb5-aa9f18b7&#34;&#xA;    alt=&#34;Steven Wilson, creador de Porcupine Tree&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Steven Wilson, creador de Porcupine Tree&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Los dos amigos elaboraron una detallada historia sobre una supuesta&#xA;banda sicodélica de los setenta, que llamaron Porcupine Tree.&lt;/p&gt;&#xA;&lt;p&gt;Este recuento contenía coloridas anécdotas sobre eventos,&#xA;participaciones en festivales de rock, y por supuesto estadías en&#xA;prisión. Cuando Wilson tuvo su propio equipo de estudio grabó varias&#xA;horas de material musical, con el fin de entrega &amp;ldquo;evidencias&amp;rdquo; de la&#xA;existencia de la banda.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Close to the Edge, down by the river</title>
      <link>http://localhost:1313/posts/2017/close-to-the-edge-down-to-the-river/</link>
      <pubDate>Mon, 17 Jul 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/close-to-the-edge-down-to-the-river/</guid>
      <description>&lt;p&gt;La historia del rock está llena de anécdotas que reflejan el choque de&#xA;egos entre artistas, como cuando Jimmy Hendrix le roba el acto de quemar&#xA;la guitarra a Pete Townsend, en el Festival de Monterrey de 1967. Hay&#xA;otra involucra a Yes y Deep Purple.&lt;/p&gt;&#xA;&lt;p&gt;La historia transcurre en la décima edición del National Jazz &amp;amp; Blues&#xA;Festival en Plumpton, en Inglaterra, en agosto de 1970. Los&#xA;organizadores habían decidido que Deep Purple cerrara el espectáculo,&#xA;algo que molestó a Yes, quienes querían clausurar el evento. Así que la&#xA;banda liderada por Jon Anderson decidió retrasar su llegada, obligando a&#xA;los organizadores a solicitar a Deep Purple que ejecutaran su show&#xA;antes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programar es un Arte Visual</title>
      <link>http://localhost:1313/posts/2017/programar-es-un-arte-visual/</link>
      <pubDate>Sun, 02 Jul 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/programar-es-un-arte-visual/</guid>
      <description>&lt;p&gt;El video de más abajo, junto con la hermosa imagen fractal, que&#xA;acompañan este post, son visualizaciones del código fuente de un sistema&#xA;en los que mi equipo ha trabajado desde 2015. Corresponde a la  suma de&#xA;seis repositorios, que corresponden a seis micro servicios, que&#xA;interactúan entre si para dar forma a un sistema mayor.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;      &lt;div&#xA;          style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;        &lt;iframe&#xA;          src=&#34;https://player.vimeo.com/video/223893340?dnt=0&#34;&#xA;            style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allow=&#34;fullscreen&#34;&gt;&#xA;        &lt;/iframe&gt;&#xA;      &lt;/div&gt;&#xA;&#xA;Visualización de código generado por mi equipo&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pour Some Syntactic Sugar on Me</title>
      <link>http://localhost:1313/posts/2017/pour-some-syntactic-sugar-on-me/</link>
      <pubDate>Sat, 10 Jun 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/pour-some-syntactic-sugar-on-me/</guid>
      <description>&lt;p&gt;El 31 de diciembre de 1984 fue una fecha que cambió para siempre la vida&#xA;de Rick Allen, el baterista de Deff Leppard. En un accidente&#xA;automovilístico, el &amp;ldquo;dios del trueno&amp;rdquo;, como le dicen sus fans, perdió&#xA;su brazo izquierdo.&lt;/p&gt;&#xA;&lt;p&gt;Para un joven y brillante baterista la amputación significaba el fin de&#xA;su carrera, pero alentado por sus compañeros y con la ayuda de Jeff Rich&#xA;(baterista de Status Quo), Allen trabajó en diseñar un kit electrónico,&#xA;con este hizo su debut en 1986 en el festival Monstes of Rock en Castle&#xA;Donington.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fake it till you make it</title>
      <link>http://localhost:1313/posts/2017/fake-it-till-you-make-it/</link>
      <pubDate>Wed, 01 Mar 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/fake-it-till-you-make-it/</guid>
      <description>&lt;p&gt;Aunque la frase en inglés,&#xA;&lt;a href=&#34;//en.wikipedia.org/wiki/Fake_it_&#39;til_you_make_it&#34;&gt;&amp;ldquo;fake it &#39;til you make it&amp;rdquo;,&lt;/a&gt; se usa como un&#xA;término asociado con la autoayuda, voy a hacer una interpretación más&#xA;literal de para explicar lo que acabo de hacer.&lt;/p&gt;&#xA;&lt;p&gt;Hace unos 5 año atrás declaré en este blog mis intenciones de construir&#xA;un nuevo lenguaje de programación. De hecho el repositorio Github del&#xA;mismo tiene más tiempo. &lt;/p&gt;&#xA;&lt;p&gt;Llamé a este lenguaje Ogú, como referencia al personaje creado por&#xA;&lt;a href=&#34;//es.wikipedia.org/wiki/Themo_Lobos&#34;&gt;Themo Lobos&lt;/a&gt;, el simpático&#xA;cavernícola amigo de Mampato. También les&#xA;&lt;a href=&#34;http://localhost:1313/blog/lnds/2012/07/25/gracias-themo&#34;&gt;conté&lt;/a&gt; cómo conocí a la&#xA;hija del ilustrador para conseguir permiso para usar una imagen de Ogú&#xA;como mascota del proyecto. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Vectores</title>
      <link>http://localhost:1313/posts/2017/vectores/</link>
      <pubDate>Mon, 02 Jan 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2017/vectores/</guid>
      <description>&lt;h1 id=&#34;steely-dan-y-la-perfección-del-sonido&#34;&gt;Steely Dan y la perfección del sonido&lt;/h1&gt;&#xA;&lt;p&gt;Durante la década de 1970 y parte de la década de 1980, Donald Fagen y&#xA;Walter Becker, los fundadores de Steely Dan, aparte de ser reconocidos&#xA;como grandes músicos y compositores, adquirieron fama por su excesivo&#xA;perfeccionismo. &lt;/p&gt;&#xA;&lt;p&gt;Se dice, pero no he encontrado evidencia, que en uno de sus álbumes&#xA;pidieron excusas por la calidad de la grabación, la que no cumplía con&#xA;sus altos estándares. Esta obsesión se notó, por ejemplo, en&#xA;la producción del álbum Gaucho, para el cual terminaron trabajando con&#xA;42 diferentes músicos para producir el séptimo álbum de la banda. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Cómo obtener el reporte del clima</title>
      <link>http://localhost:1313/posts/2016/como-obtener-el-reporte-del-clima/</link>
      <pubDate>Tue, 21 Jun 2016 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2016/como-obtener-el-reporte-del-clima/</guid>
      <description>&lt;p&gt;Este artículo termina la descripción del segundo desafío en esta serie&#xA;de nueve.&lt;/p&gt;&#xA;&lt;p&gt;Recordemos que el desafío [consiste en construir una aplicación que&#xA;obtenga el clima de distintas ciudades, usando la API de&#xA;&lt;a href=&#34;//www.openweathermap.org/&#34;&gt;OpenWeatherMap.org&lt;/a&gt;. Cnstruimos un&#xA;programa que&#xA;recibe a través de la línea de comandos una lista de ciudades. Este&#xA;programa ejecuta una consulta al sitio OpenWeatherMap.org para obtener&#xA;el informe del tiempo para cada una de las ciudades. El resultado queda&#xA;ordenado de forma descendente, desde la mayor a la menor temperatura. El&#xA;programa despliega la siguiente información por cada ciudad: el nombre,&#xA;la temperatura actual, la  máxima y la mínima más las condiciones del&#xA;clima. Finalmente el programa debe informa el tiempo ocupado para&#xA;descargar la información. Si se pasa el parámetro -p el programa hace la&#xA;consulta &amp;ldquo;en paralelo&amp;rdquo; para cada&#xA;ciudad.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chubascos de ligera intensidad</title>
      <link>http://localhost:1313/posts/2016/chubascos-de-ligera-intensidad/</link>
      <pubDate>Tue, 31 May 2016 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2016/chubascos-de-ligera-intensidad/</guid>
      <description>&lt;p&gt;El plan original, bueno el plan modificado del original, era implementar&#xA;cada uno de los 9 desafíos en un mes. Pero la verdad es que he tenido un&#xA;inicio de año bastante ocupado y mi tiempo para dedicarle a este&#xA;proyecto se ha visto afectado. La primera parte de este desafío la&#xA;publiqué el 31 de marzo, así que me ha  tomado ¡[dos meses  completar el&#xA;desafío!&lt;/p&gt;&#xA;&lt;p&gt;Si bien, no son tantas las horas efectivas dedicadas a resolver el&#xA;problema, la dificultad está en la dedicación para poder sentarme,&#xA;investigar y escribir el código. Espero poder retomar el ritmo de&#xA;publicación en los próximos desafíos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reporte del Clima</title>
      <link>http://localhost:1313/posts/2016/reporte-del-clima/</link>
      <pubDate>Thu, 31 Mar 2016 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2016/reporte-del-clima/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;//es.wikipedia.org/wiki/Jaco_Pastorius&#34;&gt;Jaco Pastorius&lt;/a&gt; es uno de esos&#xA;músicos que te deja una profunda impresión cuando lo escuchas. En&#xA;particular, no volverás a percibir el sonido del bajo de la misma forma&#xA;después de escucharlo. [Su estilo ha influenciado a grandes del rock y&#xA;el jazz, como el gran &lt;a href=&#34;//es.wikipedia.org/wiki/Flea&#34;&gt;Flea&lt;/a&gt;[&#xA;de Red Hot Chili Peppers, o &lt;a href=&#34;//es.wikipedia.org/wiki/Geddy_Lee&#34;&gt;Geddy Lee&lt;/a&gt;&#xA;de Rush, quien coloca a Jaco en la cima más alta.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;*&amp;ldquo;Sometimes a little bit of his fairy dust might rub off on you when&#xA;you pretend to play like he&#xA;does.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Esos Raros Lenguajes Nuevos</title>
      <link>http://localhost:1313/posts/2016/esos-raros-lenguajes-nuevos/</link>
      <pubDate>Sat, 09 Jan 2016 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2016/esos-raros-lenguajes-nuevos/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Si me gustan las canciones de amor&lt;br&gt;&#xA;y me gustan esos raros peinados nuevos,&lt;br&gt;&#xA;ya no quiero criticar,&lt;br&gt;&#xA;sólo quiero ser un enfermero.&lt;br&gt;&#xA;&amp;ndash; Charly García&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Siempre me pregunté qué quería decir Charly con eso de &amp;ldquo;sólo quiero&#xA;ser un enfermero&amp;rdquo; (una frase de la canción &lt;a href=&#34;//www.youtube.com/watch?v=qYo8e8AIW10&#34;&gt;&amp;ldquo;Esos raros peinados nuevos&lt;/a&gt;&amp;rdquo;).&#xA;Resulta que hay una anécdota interesante al respecto.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Cuenta la historia que una vez Charly vio como un tipo estaba&#xA;aspirando cocaína de forma exagerada. Le advierte que pare, que va a&#xA;terminar del otro lado, y el tipo siguió como si nada. Era cantado que&#xA;estaba a punto de caer en la Sobredosis. Pues no, le agarró un ataque&#xA;de epilepsia, que junto a la dureza de la mandíbula por los saques que&#xA;se había dado, hacía imposible enderezársela. Charly le dio unas&#xA;buenas trompadas hasta que le rompió la mandíbula, le enderezó la&#xA;lengua y le salvó la vida. Ese es el origen del Enfermero. Tiempo&#xA;después, Charly sería el actor secundario de la Película &amp;ldquo;Lo Que&#xA;Vendrá&amp;rdquo;, por la cual fue premiado por la crítica de Nueva York al&#xA;mejor actor secundario. Su papel, era el del enfermero&lt;/p&gt;</description>
    </item>
    <item>
      <title>Historia de un Bug</title>
      <link>http://localhost:1313/posts/2015/historia-de-un-bug/</link>
      <pubDate>Sun, 18 Jan 2015 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2015/historia-de-un-bug/</guid>
      <description>&lt;p&gt;El siguiente texto es una traducción de &lt;a href=&#34;https://www.reddit.com/r/ProgrammerHumor/comments/2spd2s/when_someone_gives_you_a_bug_long/&#34;&gt;este apunte en&#xA;Reddit&lt;/a&gt; publicado&#xA;por el usuario &lt;a href=&#34;https://www.reddit.com/user/RobotJoe&#34;&gt;RobotJoe&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Alguien te asigna un bug. &amp;quot;La luz de la sala de conferencias en el&#xA;piso veintiséis está encendida. Se requiere que esté apagada&amp;quot;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Una nota en el bug dice, &amp;quot;esto debería tomar unos cinco minutos. Es&#xA;tan sólo mover un interruptor.&amp;quot;&lt;br&gt;&#xA;&lt;br&gt;&#xA;Vas a la sala de conferencias del piso veintiséis. La luz está&#xA;encendida, pero no hay un interruptor para luz en la sala.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Así que te preparas para instalar uno. Pero el diseñador dice que&#xA;podrías arruinar la estética de la sala. Además las paredes son de&#xA;concreto. Con las herramientas adecuadas podrías instalar el&#xA;interruptor, pero nadie aprobará la compra de las herramientas&#xA;adecuadas. Sin las herramientas adecuadas el trabajo tomaría unos dos&#xA;días. Ellos quieren que se haga esto ahora, porque tienen miedo que en&#xA;cualquier minuto el CEO decida ir al piso veintiséis y se le ocurra&#xA;entrar a la sala de conferencias y pregunte por qué diablos la luz&#xA;está encendida.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Y ahora estás recibiendo emails preguntando por qué la luz no ha sido&#xA;apagada aún.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Así que debes detenerte y enviar un email grupal para explicar la&#xA;situación, y en varias personas cunde el pánico y empiezan una cadena&#xA;de emails.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Sabes que si esperas que el problema sea corregido por alguno de los&#xA;que está discutiendo en la cadena de correos este no será resuelto. El&#xA;bug tiene tu nombre, y tiene fecha de hoy, así que estás en un&#xA;problema si no lo resuelves. Así que te subes al entretecho del piso&#xA;veintiséis, encuentras los cables de luz, los cortas y los aíslas. Al&#xA;fin, problema resuelto.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Con el fin de calmar el pánico en la discusión por email, reportas que&#xA;has resuelto la incidencia.&lt;br&gt;&#xA;&lt;br&gt;&#xA;No escuchas nada más por un tiempo.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Entonces todos expresan su preocupación de que ahora la luz no puede&#xA;ser ni encendida ni apagada. ¿Qué pasa si el CEO quiere tener una&#xA;reunión allá? Así que esto es lo que te piden que hagas: quieren tirar&#xA;unos cables desde las luces hasta el sótano del edificio. Cuando&#xA;alguien necesite que las luces se enciendan o apaguen te contactarán,&#xA;y tu tendrás que correr al sótano a conectar o desconectar los&#xA;cables.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Protestas por lo ridícula de la solución. Tu jefe dice, &amp;quot;Sí, lo sé no&#xA;es el ideal. Pero es la única solución que tenemos ahora.&amp;quot;&lt;br&gt;&#xA;&lt;br&gt;&#xA;En este punto te das cuenta que tienes una elección. Podrías hacer lo&#xA;que te piden o renunciar en protesta y encontrar otro trabajo. Pero te&#xA;das cuenta que una vez que empieces un nuevo trabajo puede que te&#xA;pidan hacer algo tan idiota o quizás peor.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Así que tiras los cables desde el piso veintiséis al sótano. Cuando&#xA;llegas al sótano ves docenas de cables colgando de las paredes, de&#xA;toda la gente que ha tenido que hacer lo mismo antes. (Así que de ahí&#xA;viene la idea). Colocas los cables y los etiquetas lo mejor que&#xA;puedes, con una breve apología para quien quiera que le toque lidiar&#xA;con esto después.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Cuando vuelves a tu escritorio te encuentras con un mensaje. QA ha&#xA;reabierto el bug. Dice, &amp;quot;Veo luz&amp;quot;.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Vas a la sala de conferencias en el piso veintiséis. La luz está&#xA;apagada. Vuelves a tu escritorio y cierras el bug, reportando que lo&#xA;verificaste en persona.&lt;br&gt;&#xA;&lt;br&gt;&#xA;QA reabre el bug de nuevo. &amp;quot;La sala aún está iluminada&amp;quot;, dice.&#xA;Después de revisar la ampolleta apagada una vez más, se lo cuentas a&#xA;tu jefe, quien sugiere que bajes al sótano y revises los cables.&#xA;Protestas diciendo que estás viendo la luz y está apagado. &amp;quot;Lo sé,&#xA;pero es la manera que tienes de decirle a QA que revisaste todo&amp;quot;.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Así que suspiras y te diriges al sótano. Te aseguras que los cables no&#xA;están conectados. Las puntas están aisladas. Y no tocan nada que pueda&#xA;conducir electricidad.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Reportas a QA que has revisado los cables, que no están conectados y&#xA;que revisaste la ampolleta, la que estaba apagada.&lt;br&gt;&#xA;&lt;br&gt;&#xA;&amp;quot;No quise decir la ampolleta&amp;quot;, responde QA. &amp;quot;El bug es sobre luz en&#xA;la sala. Todavía hay demasiada luz. ¿No podrías cerrar la&#xA;persianas?&amp;quot;&lt;br&gt;&#xA;&lt;br&gt;&#xA;Respondes que las persianas no están bajo tu control, y que el bug&#xA;especifica que la luz se apagó.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Sin creerte, QA envía un mail grupal preguntando si las persianas&#xA;están cubiertas por el bug.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Pasa un tiempo antes que sepas algo. Finalmente alguien de la cadena&#xA;de mail te llama.&lt;br&gt;&#xA;&lt;br&gt;&#xA;&amp;quot;En teoría&amp;quot;, pregunta, &amp;quot;¿podría alguien participando en una reunión&#xA;en la sala de conferencias del piso veintiséis abrir o cerrar las&#xA;persianas por si mismo si es que hubiera mucho brillo o demasiada&#xA;oscuridad?&amp;quot;&lt;br&gt;&#xA;&lt;br&gt;&#xA;Sí, podrías, respondes.&lt;br&gt;&#xA;&lt;br&gt;&#xA;&amp;quot;¿Cómo, una persona ordinaria? ¿No te necesitarían para hacerlo?&amp;quot;&lt;br&gt;&#xA;&lt;br&gt;&#xA;Sí, una persona ordinaria. No, ellos no te necesitarían. Cualquiera&#xA;puede hacerlo.&lt;br&gt;&#xA;&amp;quot;Bien. Excelente. Entonces dejaremos eso por ahora. Programaré una&#xA;breve reunión* *sobre el asunto de las persianas.&amp;quot;&lt;br&gt;&#xA;&lt;br&gt;&#xA;Así que el bug se cierra. Ahora. el CEO, habiendo detectado algo&#xA;sospechoso con toda la discusión y tanta actividad furtiva alrededor&#xA;de la sala de conferencias del veintiséis, quiere tener una reunión&#xA;allí. Recibes varios emails llenos de pánico solicitando que enciendas&#xA;la luz.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Bajas el sótano, conectas los cables, y vuelves a tu escritorio, para&#xA;encontrar treinta y dos nuevos mensajes en tu bandeja de entrada.&#xA;&amp;quot;Algo está mal, la luz está apagada&amp;quot;, &amp;quot;hay un problema, no hay&#xA;luz&amp;quot;, &amp;quot;Estás recibiendo estos emails?&amp;quot; y así.&lt;br&gt;&#xA;&lt;br&gt;&#xA;El email treinta y dos dice: &amp;quot;No importa, la luz está encendida&amp;quot;.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Este proceso se repite más o menos igual cuando es momento de apagar&#xA;la luz.&lt;br&gt;&#xA;&lt;br&gt;&#xA;Pero si hay una buena noticia es esta: después de la reunión, todos se&#xA;olvidan de que hay una sala de conferencias en el piso veintiséis, así&#xA;que nunca más tendrás que hacer nada sobre ella otra vez.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Garbage collection</title>
      <link>http://localhost:1313/posts/2014/garbage-collection/</link>
      <pubDate>Sat, 25 Jan 2014 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2014/garbage-collection/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Logré el sueño de todo informático, dejar la informática&amp;rdquo;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Me contaron que la anterior frase se la escucharon a un profesional de&#xA;más o menos mi edad, al parecer está muy contento con su actual trabajo&#xA;y algo fastidiado de haber perdido tanto tiempo dedicado a la&#xA;computación.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Quiero reencantarme con la informática :/&amp;rdquo;&lt;/em&gt;, dice el tuit de una joven&#xA;publicado hace un par de días, que apareció por mi timeline.&lt;/p&gt;</description>
    </item>
    <item>
      <title>¿Qué deberíamos enseñar a los nuevos desarrolladores?</title>
      <link>http://localhost:1313/posts/2011/que-deberiamos-ensenar-a-los-nuevos-desarrolladores/</link>
      <pubDate>Fri, 18 May 2012 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2011/que-deberiamos-ensenar-a-los-nuevos-desarrolladores/</guid>
      <description>&lt;p&gt;La siguiente es mi traducción de un&#xA;&lt;a href=&#34;http://cacm.acm.org/magazines/2010/1/55760-what-should-we-teach-new-software-developers-why/fulltext&#34;&gt;artículo&lt;/a&gt;&#xA;publicado por Bjarne Stroustrup en la Communications of ACM en Enero de&#xA;2010. &lt;a href=&#34;http://www2.research.att.com/~bs/&#34;&gt;Bjarne Stroustrup&lt;/a&gt; es el&#xA;creador del lenguaje C++.&lt;/p&gt;&#xA;&lt;h1 id=&#34;qué-deberíamos-enseñar-a-los-nuevos-desarrolladores-por-qué&#34;&gt;¿Qué deberíamos enseñar a los nuevos desarrolladores? ¿Por qué?&lt;/h1&gt;&#xA;&lt;p&gt;por &lt;strong&gt;Bjarne Stroustrup.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Publicado en Communications of the ACM (&lt;a href=&#34;http://cacm.acm.org/magazines/2010/1/55760-what-should-we-teach-new-software-developers-why/fulltext&#34;&gt;texto original&lt;/a&gt;)&lt;br&gt;&#xA;Vol. 53 No. 1, Pages 40-42&lt;br&gt;&#xA;10.1145/1629175.1629192&lt;/p&gt;&#xA;&lt;p&gt;La ciencia de la computación debe estar en el centro del desarrollo de&#xA;los sistemas de software. Si no está, debemos confiar en la experiencia&#xA;individual y en reglas generales, y terminamos con sistemas menos&#xA;capaces y confiables, desarrollados y mantenidos a costos&#xA;innecesariamente altos. Necesitamos cambios en la educación que permitan&#xA;mejorías de la práctica industrial.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Aprender a programar</title>
      <link>http://localhost:1313/posts/2012/aprender-a-programar/</link>
      <pubDate>Fri, 18 May 2012 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2012/aprender-a-programar/</guid>
      <description>&lt;p&gt;De acuerdo a un estudio reciente la ingeniería de software es la carrera&#xA;más rentable y envidiable de 2012:&#xA;&lt;a href=&#34;http://www.informationweek.com/news/global-cio/careers/240000347&#34;&gt;Software Engineering 2012&amp;rsquo;s Top Job&lt;/a&gt;.&#xA;La tasa de empleabilidad para los profesionales TI es la más alta a&#xA;nivel mundial. Y sin embargo...&lt;/p&gt;&#xA;&lt;h2 id=&#34;motivación&#34;&gt;&lt;strong&gt;Motivación&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Escuché hace unos días a una joven estudiante de primer  año de&#xA; ingeniería comentar sobre el curso de introducción a la  computación, y&#xA;la verdad que el comentario no fue alentador, para ella programar no es&#xA;muy entretenido, eso de tener que decirle al computador paso a paso lo&#xA;que tiene que hacer para implementar un algoritmo simple &lt;em&gt;es una&#xA;verdadera lata&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>¿Qué es programar?</title>
      <link>http://localhost:1313/posts/2012/que-es-programar/</link>
      <pubDate>Wed, 09 May 2012 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2012/que-es-programar/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Si miras al software hoy en día, a través de los lentes de la&#xA;historia de la ingeniería, ciertamente es un tipo de ingeniería,&#xA;pero del tipo de ingeniería que hacía la gente que no conocía el&#xA;concepto del arco.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Mucho software hoy día es en cierta medida como una &lt;a href=&#34;http://www.lnds.net/2008/01/el_misterio_de_las_piramides.html&#34;&gt;pirámide&#xA;egipcia&lt;/a&gt; con&#xA;millones de piedras apiladas una encima de otra, sin integridad&#xA;estructural, construido por fuerza bruta y miles de esclavos.&amp;rdquo; --&#xA;Alan Kay&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sobre la inteligencia del coyote</title>
      <link>http://localhost:1313/posts/2012/sobre-la-inteligencia-del-coyote/</link>
      <pubDate>Tue, 17 Apr 2012 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2012/sobre-la-inteligencia-del-coyote/</guid>
      <description>&lt;h2 id=&#34;las-leyes-de-la&#34;&gt;&lt;strong&gt;Las leyes de la &amp;ldquo;Coyótica&amp;rdquo; (Parte I)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;1) El Correcamino no puede dañar al Coyote, excepto de modo indirecto&#xA;al hacer bip, bip.&lt;br&gt;&#xA;2) Ninguna fuerza externa puede dañar al Coyote, excepto su propia&#xA;ineptitud o la falla de algún producto Acme. Los trenes y camiones son&#xA;excepciones de vez en cuando.&lt;br&gt;&#xA;3) El coyote puede parar en cualquier momento, si es que no fuera un&#xA;fanático.&lt;br&gt;&#xA;(Repita &amp;ldquo;un fanático es alguien que redobla sus esfuerzos cuando ha&#xA;olvidado su objetivo&amp;rdquo; &amp;ndash; &lt;a href=&#34;http://es.wikipedia.org/wiki/George_Santayana&#34;&gt;George&#xA;Santayana&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Poesía, Caligramas y la Belleza del Código</title>
      <link>http://localhost:1313/posts/2011/poesia-caligramas-y-la-belleza-del-codigo/</link>
      <pubDate>Sun, 11 Sep 2011 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2011/poesia-caligramas-y-la-belleza-del-codigo/</guid>
      <description>&lt;p&gt;La lectura de un párrafo de texto  requiere un recorrido lineal de&#xA;izquierda a derecha. Esto debido a la conformación de nuestro sistema de&#xA;escritura, si estuvieramos en el oriente medio el sentido sería el&#xA;contrario, de derecha a izquierda. La lectura es lineal, en una&#xA;dimensión. A diferencia de la comunicación oral, por ejemplo, que tiene&#xA;2 ó quizás más dimensiones. Al conversar no sólo usamos el habla, está&#xA;el lenguaje corporal, los gestos que acompañan nuestra expresión, la&#xA;respuesta límbica, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Buggy nights</title>
      <link>http://localhost:1313/posts/2011/buggy-nights/</link>
      <pubDate>Tue, 12 Apr 2011 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2011/buggy-nights/</guid>
      <description>&lt;p&gt;Un pequeño error de tipeo y se puede perder mucho tiempo, e incluso&#xA;dinero, o quien sabe, vidas.&lt;/p&gt;&#xA;&lt;p&gt;Sucede que decidí optimizar cierto programita que estaba tomando unos 10&#xA;minutos para cargar un archivo de unos 50.000 registros, eso es bastante&#xA;para el tipo de operación que se realizaba (solo había que ingresar los&#xA;datos a dos tablas). Decidí modificar el código para usar un patrón&#xA;típico de procesamiento de archivos en modo batch, pero como estaba&#xA;apurado fui poco cuidadoso y el proceso terminó con un tiempo horrible&#xA;(iba por la hora cuando lo detuve). Y aunque miraba el código no podía&#xA;percibir el problema. Así que lo dejé para después y en la noche recién&#xA;lo pude  revisar. La solución era tan simple como correr una inserción a&#xA;una lista al interior de un if, y con esto el tiempo del proceso se&#xA;redujo a 26 segundos(!).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Soberbia</title>
      <link>http://localhost:1313/posts/2011/soberbia/</link>
      <pubDate>Mon, 28 Mar 2011 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2011/soberbia/</guid>
      <description>&lt;p&gt;La soberbia, una de &lt;a href=&#34;http://localhost:1313/blog/2010/11/las-tres-grandes-virtudes-de-un-programador.html&#34;&gt;las tres virtudes del programador&lt;/a&gt;,&#xA;pero ¿por qué, si esta sociedad considera a la soberbia como un pecado?&lt;/p&gt;&#xA;&lt;p&gt;Hace tiempo escribí en &lt;a href=&#34;https://www.akarru.com&#34;&gt;akarrú&lt;/a&gt; sobre el&#xA;&lt;a href=&#34;https://www.akarru.com/blog/2010/12/11/arete/&#34;&gt;Areté&lt;/a&gt;, el orgullo como lo&#xA;entendían los antiguos, voy a transcribirlo a este blog:&lt;/p&gt;&#xA;&lt;p&gt;Vivimos en una época mediocre, pero siempre ha sido así, ¿no es verdad?&lt;/p&gt;&#xA;&lt;p&gt;Dice Aquiles:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;Igual lote consiguen el inactivo y el que batalla con denuedo. La&#xA;misma honra obtienen tanto el cobarde como el valeroso.&lt;br&gt;&#xA;Igual muere el holgazán que el autor de numerosas hazañas.&lt;br&gt;&#xA;Ninguna ventaja me reporta haber padecido dolores en el ánimo&amp;rdquo;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Knuth responde a todas las preguntas</title>
      <link>http://localhost:1313/posts/2011/knuth-responde-a-todas-las-preguntas-2/</link>
      <pubDate>Fri, 21 Jan 2011 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2011/knuth-responde-a-todas-las-preguntas-2/</guid>
      <description>&lt;p&gt;Otro artículo, esta vez es una traducción de una charla de Knuth&#xA;publicada en 2006, por cierto, Knuth fue premiado recientemente en&#xA;España, de acuerdo a &lt;a href=&#34;http://www.elpais.com/articulo/sociedad/hombre/habla/maquinas/elpepusoc/20110118elpepusoc_2/Tes&#34;&gt;esta noticia en El Pais&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;knuth-responde-a-todas-las-preguntas&#34;&gt;Knuth responde a todas las preguntas&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;knuth0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Todos tenemos nuestros heroes personales, hombres representativos,&#xA;sobretodo del campo en que nos desarrollamos.&lt;/p&gt;&#xA;&lt;p&gt;Uno de mis más antiguos héroes personales es el profesor y&#xA;programador &lt;a href=&#34;http://web.archive.org/web/20070513053932/http://www-cs-faculty.stanford.edu/~uno/&#34;&gt;Donald&#xA;Knuth&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Autor del famoso &lt;a href=&#34;http://web.archive.org/web/20070513053932/http://en.wikipedia.org/wiki/The_Art_of_Computer_Programming&#34;&gt;Art of Computer Programming&lt;/a&gt;,&#xA;y un gran programador. Creador de&#xA;&lt;a href=&#34;http://web.archive.org/web/20070513053932/http://en.wikipedia.org/wiki/METAFONT&#34;&gt;Metafont&lt;/a&gt;&#xA;y&#xA;&lt;a href=&#34;http://web.archive.org/web/20070513053932/http://en.wikipedia.org/wiki/TeX&#34;&gt;TeX&lt;/a&gt;,&#xA;usados por miles de científicos hoy en día para publicar sus artículos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cuidate del estilista</title>
      <link>http://localhost:1313/posts/2011/cuidate-del-estilista/</link>
      <pubDate>Wed, 12 Jan 2011 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2011/cuidate-del-estilista/</guid>
      <description>&lt;p&gt;&amp;ldquo;&lt;strong&gt;No le preguntes al peluquero si cree que necesitas un corte de&#xA;pelo&lt;/strong&gt;&amp;rdquo; &lt;a href=&#34;http://manzanamecanica.org/2011/01/no_le_preguntes_al_peluquero.html&#34;&gt;nos aconseja Chato&lt;/a&gt;,&#xA;y la reflexión nace de alguna conversación  con abogados de patentes.&#xA;Bueno, es cierto que podemos considerar a muchos practicantes de la ley&#xA;como &lt;a href=&#34;http://localhost:1313/blog/2006/01/la-raiz-de-todos-los-males.html&#34;&gt;la causa de la mayoría de lo&#xA;males&lt;/a&gt;,&#xA;pero no hay que perderse tampoco.&lt;/p&gt;&#xA;&lt;p&gt;Aunque Carlos escribió un &lt;a href=&#34;http://manzanamecanica.org/2011/01/no_le_preguntes_al_peluquero.html&#34;&gt;bonito post&lt;/a&gt;,&#xA;las ideas que desliza peligrosas.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;&amp;ldquo;El profesor no tiene la cabeza en enseñar, porque el doctor no sale&#xA;de su casa para sanar.&amp;rdquo; cantaba Jorge González en los 1980s. Los&#xA;gobiernos les preguntan a los gremios de profesores cuál es la mejor&#xA;forma de mejorar la educación. Los gremios de profesores responden que&#xA;subirles los sueldos es una excelente medida, pero que evaluar a los&#xA;profesores y exigirles excelencia sería desastroso para los alumnos.&#xA;Que existan las asociaciones gremiales no es el problema. El problema&#xA;es que no se puede asumir que velarán por el bien común, &lt;strong&gt;porque sólo&#xA;velan por los intereses de los suyos&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zig Zag</title>
      <link>http://localhost:1313/posts/2011/zig-zag/</link>
      <pubDate>Tue, 11 Jan 2011 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2011/zig-zag/</guid>
      <description>&lt;p&gt;Han habido varias contribuciones al desafío del Zig Zag, si todavía no&#xA;lo has leido, y te animas a contestar el test, entonces antes de&#xA;seguir &lt;a href=&#34;http://localhost:1313/blog/2011/01/un-test-mas-dificil.html&#34;&gt;lee el desafío&lt;/a&gt; e&#xA;intenta resolverlo.&lt;/p&gt;&#xA;&lt;p&gt;La solución más concisa que conozco aparece en el sitio &lt;a href=&#34;http://rosettacode.org/wiki/Zig-zag_matrix&#34;&gt;Rosseta&#xA;Cod&lt;/a&gt;e, está escrita en el&#xA;&lt;a href=&#34;http://www.jsoftware.com/&#34;&gt;lenguaje J&lt;/a&gt; y es la siguiente:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;pre&gt;&lt;code&gt; ($ [: /:@; &amp;lt;@|.`&amp;lt;/.@i.)@,~ 5&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Increible, ¿verdad? En este caso es la solución para una matriz de 5 x 5. Hay una explicación de ese código&#xA;&lt;a href=&#34;http://rosettacode.org/wiki/Talk:Zig_Zag#reading_the_J_examples&#34;&gt;acá&lt;/a&gt;,&#xA;pero antes de que emprendan la tarea de tratar de entenderla veamos que&#xA;respondieron algunos lectores y después le voy  a mostrar mi solución.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Un simple test</title>
      <link>http://localhost:1313/posts/2010/un-simple-test/</link>
      <pubDate>Thu, 23 Dec 2010 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2010/un-simple-test/</guid>
      <description>&lt;p&gt;Si tienen que seleccionar desarrolladores de software (antes les&#xA;decíamos programadores pero el término ha sufrido un cierto&#xA;desprestigio, lamentablemente), entonces les sugiero incorporar a su&#xA;proceso de selección este simple test:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Escriba un programa que imprima los números del 1 al 100. Pero, para&#xA;los múltiplos de tres imprima &amp;ldquo;Fizz&amp;rdquo; en vez del número, y para los&#xA;múltiplos de cinco imprima &amp;ldquo;Buzz&amp;rdquo;. Para los números que sean&#xA;múltiplos de ambos, tres y cinco, imprima &amp;ldquo;FizzBuzz&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Virtudes y defectos</title>
      <link>http://localhost:1313/posts/2010/virtudes-y-defectos/</link>
      <pubDate>Sun, 21 Nov 2010 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2010/virtudes-y-defectos/</guid>
      <description>&lt;p&gt;Hubo varias respuestas a &lt;a href=&#34;http://localhost:1313/blog/2010/11/las-tres-grandes-virtudes-de-un-programador.html&#34;&gt;la pregunta del viernes&lt;/a&gt;,&#xA;sobre las tres virtudes del programador, según Larry Wall, pereza,&#xA;impaciencia y orgullo (o soberbia).&lt;/p&gt;&#xA;&lt;p&gt;Una respuesta me llegó directamente por email:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;La pereza? Nos confiamos en lo que sabemos... Lo sacamos en un par&#xA;de dias cuando lo programamos en un mes. La impaciencia? No nos&#xA;dormimos hasta que vemos una subrutina hacer lo que queremos que haga.&#xA;Función, librería, clase... Nooo, que lo haga la subrutina. El&#xA;orgullo? Yo hice este programa y ningun otro se le compara... Y si se&#xA;le compara tiene errores, asi que ni lo compare ni lo menos precie. Ya&#xA;quisiera un programador como yo.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Las tres grandes virtudes de un programador </title>
      <link>http://localhost:1313/posts/2010/las-tres-grandes-virtudes-de-un-programador/</link>
      <pubDate>Fri, 19 Nov 2010 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2010/las-tres-grandes-virtudes-de-un-programador/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Promovemos el desarrollo de las tres grandes virtudes de un&#xA;programador: la pereza, la impaciencia y el orgullo.&amp;rdquo;&lt;br&gt;&#xA;&amp;ndash; Larry Wall, creador de Perl.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;We will encourage you to develop the three great virtues of a&#xA;programmer: laziness, impatience, and hubris.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;¿Por qué la pereza, la impaciencia y el orgullo (o soberbia) pueden ser&#xA;las tres virtudes de un programador?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Detén el reloj, aplasta al &#34;bicho&#34;</title>
      <link>http://localhost:1313/posts/2010/deten-el-reloj-aplasta-al-bicho/</link>
      <pubDate>Thu, 27 May 2010 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2010/deten-el-reloj-aplasta-al-bicho/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;fast-clock.gif&#34; alt=&#34;fast-clock.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Si este blog fuera lo que alguna vez pretendí que fuera, me gustaría que&#xA;se pareciera a &lt;a href=&#34;http://wordaligned.org/&#34;&gt;Word Aligned&lt;/a&gt;, y para que&#xA;tengan una idea de que les estoy hablando, he traducido un artículo de&#xA;ese extraordinario blog, espero que lo disfruten (incluso los que son&#xA;menos técnicos). (*)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Detén el reloj, aplasta el bicho&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Por Thomas Guest (Word Aligned)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;¿Cuál de estos relojes es el mejor?&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;stopped-clock.gif&#34; alt=&#34;stopped-clock.gif&#34;&gt;&#xA;&lt;img src=&#34;slow-clock.gif&#34; alt=&#34;slow-clock.gif&#34;&gt;&#xA;&lt;img src=&#34;fast-clock.gif&#34; alt=&#34;fast-clock.gif&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Podríamos fácilmente argumentar que el que está detenido.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1 de 5.000 ó 5.000 de 1 (batch y transaccional) </title>
      <link>http://localhost:1313/posts/2010/1-de-5-000-o-5-000-de-1-batch-y-transaccional/</link>
      <pubDate>Sun, 04 Apr 2010 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2010/1-de-5-000-o-5-000-de-1-batch-y-transaccional/</guid>
      <description>&lt;p&gt;Es fácil engañarse cuando se intenta optimizar, lo que parece lógico, y&#xA;hasta numéricamente plausible puede estallarnos en la cara cuando&#xA;&lt;a href=&#34;http://localhost:1313/blog/2009/08/enganos-numericos.html&#34;&gt;lo analizamos en detalle&lt;/a&gt;,&#xA;especialmente cuando lo ponemos a prueba en la práctica.&lt;/p&gt;&#xA;&lt;p&gt;Es típico que algún experto nos aconseje sobre usar determinada técnica,&#xA;porque en teoría es más óptima. Los novatos tienden a aplicar estas&#xA;propuestas sin cuestionarlas mucho. Los más viejos tendemos a confiar en&#xA;la experiencia, y esta suele darnos la razón.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La programación en 10 años más</title>
      <link>http://localhost:1313/posts/2010/la-programaci%C3%B3n-en-10-anos-mas/</link>
      <pubDate>Tue, 30 Mar 2010 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2010/la-programaci%C3%B3n-en-10-anos-mas/</guid>
      <description>&lt;p&gt;De &lt;a href=&#34;http://bertrandmeyer.com/2010/03/29/verification-as-a-matter-of-course/&#34;&gt;acuerdo a Bertrand Meyer&lt;/a&gt;,&#xA;en diez años más:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Seguiremos usando lenguajes orientados al objeto&lt;/li&gt;&#xA;&lt;li&gt;La programación profesional será mucho más rigurosa&lt;/li&gt;&#xA;&lt;li&gt;La verificación estará integrada en el proceso de desarrollo&lt;/li&gt;&#xA;&lt;li&gt;Cada programa tendrá una interfaz web&lt;/li&gt;&#xA;&lt;li&gt;La concurrencia estará en todas partes&lt;/li&gt;&#xA;&lt;li&gt;Tendremos más confianza en la evaluación de los objetivos&lt;/li&gt;&#xA;&lt;li&gt;La ingeniería de software no será solo un proceso, sino que una&#xA;tecnología&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Tomado de la presentación de Bertran Meyer&#xA;&lt;a href=&#34;http://se.ethz.ch/~meyer/publications/methodology/programming-10years-sierre.pdf&#34;&gt;&amp;ldquo;How you will be programming in 10 years&amp;rdquo;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>La disciplina condenada</title>
      <link>http://localhost:1313/posts/2010/la-disciplina-condenada/</link>
      <pubDate>Sun, 10 Jan 2010 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2010/la-disciplina-condenada/</guid>
      <description>&lt;p&gt;Pienso que uno de los mejores argumentos en contra de la noción de&#xA;crisis de software fue dada indirectamente por&#xA;&lt;a href=&#34;http://www.lnds.net/2009/07/calidad-correccion-y-elegancia-una-entre.html&#34;&gt;Edsger W. Dijkstra&lt;/a&gt;,&#xA;en su charla de 1988 &amp;ldquo;&lt;a href=&#34;http://www.cs.utexas.edu/users/EWD/ewd10xx/EWD1036.PDF&#34;&gt;ON THE CRUELTY OF REALLY TEACHING COMPUTIN&#xA;SCIENCE&lt;/a&gt;&amp;rdquo;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Cierta cantidad de estos fenómenos han sido agrupados bajo el nombre&#xA;de &amp;ldquo;Ingeniería de Software&amp;rdquo;. Así como la economía es conocida como&#xA;&amp;ldquo;La Ciencia Miserable&amp;rdquo;,* la ingeniería de software debería ser&#xA;conocida como &amp;ldquo;La Disciplina Condenada&amp;rdquo;&lt;strong&gt;, condenada porque ni&#xA;siquiera puede acercarse a su meta, dado que la misma es en sí misma&#xA;contradictoria. La ingeniería de software, por supuesto, se presenta a&#xA;sí misma como otra causa valiosa, pero es un colirio: si lee&#xA;cuidadosamente su literatura y analiza lo que realmente hacen quienes&#xA;se avocan a ella, descubrirá que la ingeniería de software ha adoptado&#xA;como su estatuto *&amp;ldquo;Cómo programar si usted no puede&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La programación como un Arte (Parte V y final)</title>
      <link>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-v-y-final/</link>
      <pubDate>Wed, 09 Dec 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-v-y-final/</guid>
      <description>&lt;p&gt;&lt;strong&gt;La programación de computadores como un arte&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Por Donald Knuth, 1974&lt;/p&gt;&#xA;&lt;p&gt;(Lee las partes&#xA;&lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-i.html&#34;&gt;I&lt;/a&gt;,&#xA;&lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-ii.html&#34;&gt;II&lt;/a&gt;,&#xA;&lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-iii.html&#34;&gt;III&lt;/a&gt;&#xA;y&#xA;&lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-iv.html&#34;&gt;IV&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Menos Facilidades: Más Diversión&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Una cosa bastante curiosa que he notado sobre la satisfacción estética&#xA;es que nuestro placer es significativamente mayor cuando logramos algo&#xA;con herramientas limitadas. Por ejemplo, el programa del que&#xA;personalmente estoy muy contento y orgulloso es un compilador de que una&#xA;vez escribí para una minicomputadora primitiva, que sólo tenía 4096&#xA;palabras de memoria, 16 bits por palabra. Una persona se siente como un&#xA;virtuoso real al lograr algo con tan severas restricciones.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La programación como un Arte (Parte IV)</title>
      <link>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-iv/</link>
      <pubDate>Tue, 08 Dec 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-iv/</guid>
      <description>&lt;p&gt;&lt;strong&gt;La programación de computadores como un arte&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Por Donald Knuth, 1974&lt;/p&gt;&#xA;&lt;p&gt;(Lee las partes&#xA;&lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-i.html&#34;&gt;I&lt;/a&gt;,&#xA;&lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-ii.html&#34;&gt;II&lt;/a&gt;,&#xA;y&#xA;&lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-iii.html&#34;&gt;III&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;h2 id=&#34;obras-de-arte&#34;&gt;Obras de Arte&lt;/h2&gt;&#xA;&lt;p&gt;**Cuando estoy sentado en la audiencia escuchando una larga charla,&#xA;mi atención usualmente empieza a desvanecerse en este punto, cerca de la&#xA;hora. Así que ¿me pregunto si se están cansando de mi arenga sobre&#xA;&amp;ldquo;ciencia&amp;rdquo; y &amp;ldquo;arte&amp;rdquo;? Realmente espero que sean capaces de escuchar&#xA;atentamente el resto de esto, de todos modos, porque ahora viene la&#xA;parte sobre la cual tengo sentimientos más profundos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La programación como un Arte (Parte III)</title>
      <link>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-iii/</link>
      <pubDate>Sun, 06 Dec 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-iii/</guid>
      <description>&lt;p&gt;La programación de computadores como un arte&lt;/p&gt;&#xA;&lt;p&gt;Por Donald Knuth, 1974&lt;/p&gt;&#xA;&lt;p&gt;(Lee las partes &lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-i.html&#34;&gt;I&lt;/a&gt;,&#xA;y &lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-ii.html&#34;&gt;II&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;h2 id=&#34;ciencia-y-arte&#34;&gt;&lt;strong&gt;Ciencia y Arte&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Nuestra discusión indica que la programación de computadores es para&#xA;ahora ambas: una ciencia y un arte, y que los dos aspectos se&#xA;complementan bien una con otra. Aparentemente muchos autores que&#xA;examinan tal pregunta llegan a la misma conclusión, que su área de&#xA;estudio es ambas una ciencia y un arte, cualquiera sea esta área.&#xA;Encontré un libro sobre fotografía elemental, escrito en 1893, que decía&#xA;&amp;ldquo;el desarrollo de la imagen fotográfica es ambas un arte y una&#xA;ciencia.&amp;rdquo; De hecho, cuando tomé primero un diccionario para estudiar&#xA;las palabras &amp;ldquo;arte&amp;rdquo; y &amp;ldquo;ciencia&amp;rdquo; le eché un vistazo al prefacio del&#xA;editor, el que empezaba diciendo, &amp;ldquo;la construcción de un diccionario es&#xA;una ciencia y un arte a la vez&amp;rdquo;. El editor del diccionario de Funk &amp;amp;&#xA;Wagnall&#39;s dictionary observaba que la penosa acumulación y&#xA;clasificación de los datos sobre las palabras tiene un carácter&#xA;científico, mientras que un fraseo bien escogido para la definición&#xA;demanda la habilidad de escribir con la economía y la precisión: &amp;ldquo;La&#xA;ciencia sin este arte es probablemente inefectiva, el arte sin la&#xA;ciencia es ciertamante inexacto.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>La programación como un Arte (Parte II)</title>
      <link>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-ii/</link>
      <pubDate>Fri, 04 Dec 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-ii/</guid>
      <description>&lt;p&gt;&lt;strong&gt;La programación de computadores como un arte&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Por Donald Knuth&lt;/p&gt;&#xA;&lt;p&gt;(lee &lt;a href=&#34;http://localhost:1313/2009/12/la-programacion-como-un-arte-parte-i.html&#34;&gt;la primera parte&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;h2 id=&#34;ciencia-versus-arte&#34;&gt;&lt;strong&gt;Ciencia versus Arte&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;La palabra &amp;ldquo;ciencia&amp;rdquo; parece haber sido usada por muchos años en el&#xA;mismo sentido que &amp;ldquo;arte&amp;rdquo;; por ejemplo, la gente hablaba también de las&#xA;siete ciencias liberales, que eran las mismas siete artes liberales.&#xA;Duns Scotus en el siglo trece llamaba a la lógica &amp;ldquo;la ciencia de las&#xA;ciencias, y el arte de los artes&amp;rdquo;. Como la civilización y la enseñanza&#xA;se desarrollaron, las palabras tomaron más y más sentidos&#xA;independientes, &amp;ldquo;ciencia&amp;rdquo; se empezó a usar para el conocimiento, y&#xA;&amp;ldquo;arte&amp;rdquo; para la aplicación del conocimiento. Luego, la ciencia de la&#xA;astronomía era la base para el arte de la navegación. La situación era&#xA;casi exactamente como la manera en que nosotros ahora distinguimos entre&#xA;&amp;ldquo;ciencia&amp;rdquo; e &amp;ldquo;ingeniería&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La programación como un Arte (Parte I)</title>
      <link>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-i/</link>
      <pubDate>Tue, 01 Dec 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2009/la-programacion-como-un-arte-parte-i/</guid>
      <description>&lt;p&gt;&lt;strong&gt;La programación de computadores como un arte&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Por Donald Knuth&lt;/p&gt;&#xA;&lt;p&gt;CACM, &lt;strong&gt;Diciembre&lt;/strong&gt; de 1974&lt;/p&gt;&#xA;&lt;p&gt;Cuando &lt;em&gt;Communications of the ACM&lt;/em&gt; comenzó su publicación en 1959, los&#xA;miembros del Comité Editorial de la ACM hicieron la siguiente&#xA;observación al describir el propósito de las publicaciones periódicas de&#xA;la ACM:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Si la programación de computadores será una importante parte de la&#xA;investigación y desarrollo de los computadores, se debe efectuar una&#xA;transición de la programación de un arte a una ciencia disciplinada&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La naturaleza del software, según Octavio Paz</title>
      <link>http://localhost:1313/posts/2009/la-naturaleza-del-software-segun-octavio-paz/</link>
      <pubDate>Thu, 22 Oct 2009 13:01:57 +0000</pubDate>
      <guid>http://localhost:1313/posts/2009/la-naturaleza-del-software-segun-octavio-paz/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;Octavio_Paz.gif&#34; alt=&#34;Octavio Paz&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;La revelación de nuestra condición es, asimismo creación de nostros mismos. Según se ha visto, esa revelación puede darse de muchas formas e incluso no recibir formulación verbal alguna. Pero aun entonces implica una creación de aquello mismo que revela: el hombre. Nuestra condición original es, por esencia, algo que siempre esta haciéndose a sí mismo&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Así comienza Octavio Paz el capítulo &amp;ldquo;Inspiración&amp;rdquo;, en su libro el &amp;ldquo;Arco y La Lira&amp;rdquo;, y acudo&lt;/p&gt;</description>
    </item>
    <item>
      <title>Epigramas de la Programación</title>
      <link>http://localhost:1313/posts/2008/epigramas-de-la-programacion/</link>
      <pubDate>Thu, 28 Feb 2008 18:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2008/epigramas-de-la-programacion/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://delivery.acm.org/10.1145/1200000/1198357/p171-cheatham.pdf?key1=1198357&amp;amp;key2=7908193711&amp;amp;coll=&amp;amp;dl=GUIDE&amp;amp;CFID=15151515&amp;amp;CFTOKEN=6184618&#34;&gt;Alan Perlis&lt;/a&gt;&#xA;fue la primera persona en recibir el Premio Turing en 1966, una persona&#xA;de gran humor, y pionero en el desarrollo de los lenguajes de programación,&#xA;especialmente con su aporte&#xA;a &lt;a href=&#34;http://es.wikipedia.org/wiki/ALGOL&#34;&gt;ALGOL&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Perlis.jpg&#34; alt=&#34;Perlis.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Famosos son sus &lt;a href=&#34;http://www-pu.informatik.uni-tuebingen.de/users/klaeren/epigrams.html&#34;&gt;epigramas de la programación&lt;/a&gt;,&#xA;publicados en 1982 en la revista&#xA;del &lt;a href=&#34;http://www.sigplan.org/&#34;&gt;SIGPLAN&lt;/a&gt;(El grupo de interés especial en&#xA;lenguajes de programación) de la &lt;a href=&#34;http://www.acm.org/&#34;&gt;ACM&lt;/a&gt; y que son&#xA;parte del folclore de nuestra profesión, y casi siempre son citados en&#xA;papers, blogs, y artículos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>La Practica de la Programación</title>
      <link>http://localhost:1313/posts/2007/la-practica-de-la-programacion/</link>
      <pubDate>Thu, 12 Jul 2007 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2007/la-practica-de-la-programacion/</guid>
      <description>&lt;p&gt;Una vez escuche que &lt;a href=&#34;http://localhost:1313/2006/09/knuth_responde_a_todas_las_preguntas.html&#34;&gt;Knuth&lt;/a&gt;&#xA;colocaba en su tarjeta de presentación:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Donald Knuth - Programmer&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Pero con el tiempo tuvo que cambiarla, porque poner en una tarjeta de&#xA;presentación &amp;ldquo;Programador&amp;rdquo;, como &amp;ldquo;profesión&amp;rdquo;, no era muy bien visto.&#xA;Hoy en día se coloca cualquier cosa en las tarjetas de presentación de&#xA;mis colegas, desde Analista de Sistemas, a Arquitecto de Información,&#xA;pasando por supuesto, por Ingeniero de Software.&lt;/p&gt;&#xA;&lt;p&gt;Parece que decir que uno es un programador es algo vergonzoso, siendo&#xA;que programar es a lo mejor que se pueda dedicar una persona.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Knuth responde a todas las preguntas</title>
      <link>http://localhost:1313/posts/2006/knuth-responde-a-todas-las-preguntas/</link>
      <pubDate>Sat, 23 Sep 2006 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2006/knuth-responde-a-todas-las-preguntas/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;knuth0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Todos tenemos nuestros heroes personales, hombres representativos,&#xA;sobretodo del campo en que nos desarrollamos.&lt;/p&gt;&#xA;&lt;p&gt;Uno de mis más antiguos héroes personales es el profesor y&#xA;programador &lt;a href=&#34;http://web.archive.org/web/20070513053932/http://www-cs-faculty.stanford.edu/~uno/&#34;&gt;Donald&#xA;Knuth&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Autor del famoso &lt;a href=&#34;http://web.archive.org/web/20070513053932/http://en.wikipedia.org/wiki/The_Art_of_Computer_Programming&#34;&gt;Art of Computer Programming&lt;/a&gt;,&#xA;y un gran programador. Creador de&#xA;&lt;a href=&#34;http://web.archive.org/web/20070513053932/http://en.wikipedia.org/wiki/METAFONT&#34;&gt;Metafont&lt;/a&gt;&#xA;y&#xA;&lt;a href=&#34;http://web.archive.org/web/20070513053932/http://en.wikipedia.org/wiki/TeX&#34;&gt;TeX&lt;/a&gt;,&#xA;usados por miles de científicos hoy en día para publicar sus artículos.&lt;/p&gt;&#xA;&lt;p&gt;Donald Knuth es profesor emérito en la Universidad de Stanford, y&#xA;probablemente el geek más antiguo que existe. Por ejemplo, las versiones&#xA;de Tex se aproximan al número trascendente Pi, por ejemplo, la primera&#xA;versión era la 3, la segunda 3.1, la tercera 3.14, y así sucesivamente.&#xA;Además tiene la costumbre de pagar 2.56 dólares por cada error&#xA;encontrado en sus libros (porque &amp;ldquo;256 centavos es un dolar&#xA;hexadecimal&amp;rdquo;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Web Services U Object Remoting</title>
      <link>http://localhost:1313/posts/2005/web-services-u-object-remoting/</link>
      <pubDate>Wed, 03 Aug 2005 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2005/web-services-u-object-remoting/</guid>
      <description>&lt;p&gt;Hace un tiempo publique en &lt;a href=&#34;http://www.netveloper.com/&#34;&gt;Netveloper&lt;/a&gt; un&#xA;artículo sobre web services y object remoting. Puedes leer el&#xA;&lt;a href=&#34;http://www.netveloper.com/contenido.aspx?IDP=0&amp;amp;IDC=195&#34;&gt;artículo&lt;/a&gt;, pero&#xA;también he decidido guardar una copia en este blog.&lt;/p&gt;&#xA;&lt;p&gt;Sigue leyendo...&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Conceptualmente Web Service y Remoting son lo mismo, objetos&#xA;distribuidos. La diferencia principal es el protocolo.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;En Remoting puedes usar protocolos no estándares.&#xA;En &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_service&#34;&gt;Web Services&lt;/a&gt;&#xA;usa SOAP, o &lt;a href=&#34;https://en.wikipedia.org/wiki/Remote_procedure_call&#34;&gt;RPC&lt;/a&gt;-&lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34;&gt;XML&lt;/a&gt;, en general estándares abiertos, sobre&#xA;&lt;a href=&#34;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34;&gt;HTTP&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Si quieres publicar a la web tus servicios, entonces debes usar Web&#xA;Services, porque tus clientes pueden estar usando otro ambiente,&#xA;como &lt;a href=&#34;https://java.sun.com&#34;&gt;Java&lt;/a&gt;, PHP, etc, y lo que importa es la&#xA;interoperabilidad.&lt;/p&gt;</description>
    </item>
    <item>
      <title>7 Consejos para usar excepciones</title>
      <link>http://localhost:1313/posts/2005/7-consejos-para-usar-excepciones/</link>
      <pubDate>Tue, 02 Aug 2005 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/posts/2005/7-consejos-para-usar-excepciones/</guid>
      <description>&lt;p&gt;Aqui hay 7 consejos para el uso de excepciones en C#&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;No utilice las excepciones para controlar el flujo de la&#xA;aplicación.&lt;/li&gt;&#xA;&lt;li&gt;Usar código de validación para evitar excepciones innecesarias.&lt;/li&gt;&#xA;&lt;li&gt;Usar el bloque finally para asegurar la liberación de los recursos.&lt;/li&gt;&#xA;&lt;li&gt;No atrape las excepciones que no va a manejar.&lt;/li&gt;&#xA;&lt;li&gt;Tenga en cuenta que relanzar excepciones (rethrowing) es costoso.&#xA;Casi tan costoso como la excepción que se produjo.&lt;/li&gt;&#xA;&lt;li&gt;Preservar toda la información de diagnóstico posible en los&#xA;manejadores de excepciones. Esto es util para efectos de depurar.&lt;/li&gt;&#xA;&lt;li&gt;Utilizar el Monitor de Performance para monitorear excepciones del&#xA;CLR.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Gracias a Juan Daria Tempesta (Instructor DCE) por inspirar este&#xA;artículo&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
