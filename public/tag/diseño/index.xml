<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Diseño on La Naturaleza del Software</title>
    <link>http://localhost:1313/tag/dise%C3%B1o/</link>
    <description>Recent content in Diseño on La Naturaleza del Software</description>
    <generator>Hugo</generator>
    <language>es-cl</language>
    <lastBuildDate>Sun, 23 Jul 2017 08:25:11 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tag/dise%C3%B1o/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>El botón de los 300 millones de dólares</title>
      <link>http://localhost:1313/blog/lnds/2017/07/23/el-boton-de-los-300-millones-de-dolares/</link>
      <pubDate>Sun, 23 Jul 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/blog/lnds/2017/07/23/el-boton-de-los-300-millones-de-dolares/</guid>
      <description>&lt;p&gt;A veces los ingenieros estamos tan enfocados en la funcionalidad que no&#xA;nos preocupamos de la usabilidad. A ver si me explico,  &#xA;&lt;a href=&#34;http://localhost:1313/blog/lnds/2013/03/23/expectativas&#34;&gt;ponemos el foco en la definición del caso de uso&lt;/a&gt;, nos centramos&#xA;en darle al usuario lo que nos pide, pero no lo que necesita.&lt;/p&gt;&#xA;&lt;p&gt;Pero, ¿hacemos una observación de cómo usan nuestro sistema los&#xA;usuarios? Tengo varias anécdotas de cómo nos hemos dado cuenta que&#xA;nuestro usuarios realizan tareas manuales para acomodar el input a&#xA;nuestros sistemas, tareas que no serían necesarias si nos hubieran&#xA;descrito cómo llegaba la información en realidad, en vez de solicitar un&#xA;formato ideal de cómo supuestamente debía llegar. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Paseando con Dromedarios</title>
      <link>http://localhost:1313/blog/lnds/2017/06/26/paseando-con-dromedarios/</link>
      <pubDate>Mon, 26 Jun 2017 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/blog/lnds/2017/06/26/paseando-con-dromedarios/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Un dromedario es un caballo diseñado por un comité&amp;rdquo; &lt;br&gt;&#xA;&amp;ndash; antiguo aforismo mentat, anterior a la Yihad Butleriana&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Nunca hay tiempo para hacer las cosas bien a la primera, pero&#xA;siempre hay tiempo para volver a hacerlas&amp;rdquo;&lt;br&gt;&#xA;&amp;ndash; Anónimo, citado por Melvin Conway&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Mi más memorable encuentro y realización de la profundidad de la Ley de&#xA;Conway fue hace un par de años, cuando una decisión de arquitectura se&#xA;vio afectada por la organización del datacenter en que alojamos nuestras&#xA;aplicaciones. Tal cómo lo escuchan, debimos modificar la arquitectura de&#xA;despliegue de nuestro sistema por la organización de servicios del&#xA;datacenter. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Cómo diseñar una API</title>
      <link>http://localhost:1313/blog/lnds/2009/03/20/como-dise%C3%B1ar-una-api/</link>
      <pubDate>Fri, 20 Mar 2009 18:25:11 -0300</pubDate>
      <guid>http://localhost:1313/blog/lnds/2009/03/20/como-dise%C3%B1ar-una-api/</guid>
      <description>&lt;p&gt;OK, hemos hablado de las APIs, sobre &lt;a href=&#34;http://localhost:1313/2009/03/de-que-estamos-hablando.html&#34;&gt;lo que no son&lt;/a&gt;, pero no&#xA;mucho sobre lo qué son realmente, y que importancia tienen en el&#xA;desarrollo de software.&lt;/p&gt;&#xA;&lt;p&gt;Y para que no digan que sólo nos dedicamos a criticar, vamos a aportar&#xA;con algunas ideas sobre como escribir una API.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;restfullapi.jpg&#34; alt=&#34;restfullapi.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Antes de seguir, debo decir que para mi, las interfaces REST, o las API&#xA;en el contexto de la Web 2.0, es decir, las APIcque permiten hacer&#xA;Mashups, por ejemplo, no son estrictamente una API, pero esta distinción&#xA;es más bien semántica.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Una API no es código abierto</title>
      <link>http://localhost:1313/blog/lnds/2009/03/20/una-api-no-es-codigo-abierto/</link>
      <pubDate>Fri, 20 Mar 2009 08:25:11 -0300</pubDate>
      <guid>http://localhost:1313/blog/lnds/2009/03/20/una-api-no-es-codigo-abierto/</guid>
      <description>&lt;p&gt;Leo en un &lt;a href=&#34;http://blog.canal.cl/2009/03/y-dale-con-que-va-morir-el-diario.htm&#34;&gt;apunte de Micronauta&lt;/a&gt;&#xA;la afirmación: &amp;ldquo;el triunfo total del código abierto, una tendencia en&#xA;la cual la liberación de APIs que estamos observando por estos días es&#xA;un eslabón fundamental.&amp;rdquo;. Esta frase es el resumen de un &lt;a href=&#34;http://xark.typepad.com/my_weblog/2009/03/news-futures-a-whats-next-overview.html&#34;&gt;texto en&#xA;inglés&lt;/a&gt;&#xA;que dice:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Open Source wins&lt;/strong&gt;. Open Source solutions and platforms will push&#xA;proprietary systems to the brink simply because of the rate at which&#xA;they adapt to change and innovation. Pay attention to the Big Media&#xA;attempt to monetize this Open Source principle through the&#xA;proliferation of news APIs, but don&amp;rsquo;t expect it to succeed unless&#xA;these APIs give developers and end-users more freedom.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
